/*
 * This file is generated by jOOQ.
 */
package com.jordansimsmith.immersion.tracker.jooq.tables.records;


import com.jordansimsmith.immersion.tracker.jooq.tables.Episode;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EpisodeRecord extends UpdatableRecordImpl<EpisodeRecord> implements Record4<Integer, String, LocalDateTime, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.episode.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.episode.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.episode.file_name</code>.
     */
    public void setFileName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.episode.file_name</code>.
     */
    public String getFileName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.episode.timestamp</code>.
     */
    public void setTimestamp(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.episode.timestamp</code>.
     */
    public LocalDateTime getTimestamp() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.episode.show_id</code>.
     */
    public void setShowId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.episode.show_id</code>.
     */
    public Integer getShowId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, LocalDateTime, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, LocalDateTime, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Episode.EPISODE.ID;
    }

    @Override
    public Field<String> field2() {
        return Episode.EPISODE.FILE_NAME;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Episode.EPISODE.TIMESTAMP;
    }

    @Override
    public Field<Integer> field4() {
        return Episode.EPISODE.SHOW_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFileName();
    }

    @Override
    public LocalDateTime component3() {
        return getTimestamp();
    }

    @Override
    public Integer component4() {
        return getShowId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFileName();
    }

    @Override
    public LocalDateTime value3() {
        return getTimestamp();
    }

    @Override
    public Integer value4() {
        return getShowId();
    }

    @Override
    public EpisodeRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public EpisodeRecord value2(String value) {
        setFileName(value);
        return this;
    }

    @Override
    public EpisodeRecord value3(LocalDateTime value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public EpisodeRecord value4(Integer value) {
        setShowId(value);
        return this;
    }

    @Override
    public EpisodeRecord values(Integer value1, String value2, LocalDateTime value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EpisodeRecord
     */
    public EpisodeRecord() {
        super(Episode.EPISODE);
    }

    /**
     * Create a detached, initialised EpisodeRecord
     */
    public EpisodeRecord(Integer id, String fileName, LocalDateTime timestamp, Integer showId) {
        super(Episode.EPISODE);

        setId(id);
        setFileName(fileName);
        setTimestamp(timestamp);
        setShowId(showId);
        resetChangedOnNotNull();
    }
}
